@model H4M_Assurance.Domain.Entities.Constat

@{
    ViewBag.Title = "Create";
}

<h2>Nouveau Constat</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="row">
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-6 form-group">
                    @Html.LabelFor(model => model.NomDocument, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NomDocument, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomDocument, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-6 form-group">
                    @Html.LabelFor(model => model.Ordre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ordre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ordre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.CodeConstat, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CodeConstat, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CodeConstat, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DateSinistre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateSinistre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateSinistre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LieuSinistre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LieuSinistre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LieuSinistre, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Blesse, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Blesse)
                            @Html.ValidationMessageFor(model => model.Blesse, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Degats, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Degats)
                            @Html.ValidationMessageFor(model => model.Degats, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            @*Donnée Assuré*@
            <div class="col-md-4 jumbotron">
                <h2>Vehicule A</h2>
                <div class="form-group">

                    @Html.LabelFor(model => model.ContratAssure.IdContrat, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.ContratAssure.IdContrat, new { htmlAttributes = new { @class = "form-control", @id = "idContratAssure" } })
                        @Html.ValidationMessageFor(model => model.ContratAssure.IdContrat, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.DisplayNameFor(model => model.ContratAssure.CodeAgence) :
                    <div class="">
                        @Html.DisplayFor(model => model.ContratAssure.CodeAgence, new { htmlAttributes = new { @class = "form-control", @id = "codeAgenceAssure" } })
                    </div>
                </div>

                <div class="form-group">

                    @Html.DisplayNameFor(model => model.ContratAssure.Assure.NomPrenom) :
                    <div class="">
                        @Html.DisplayFor(model => model.ContratAssure.Assure.NomPrenom.Nom, new { htmlAttributes = new { @class = "form-control", @id = "nomAssure" } })
                    </div>
                </div>

                <div class="form-group">

                    @Html.DisplayNameFor(model => model.ContratAssure.Assure.NomPrenom) :
                    <div class="">
                        @Html.DisplayFor(model => model.ContratAssure.Assure.NomPrenom.Nom, new { htmlAttributes = new { @class = "form-control", @id = "nomAssure" } })
                    </div>
                </div>

                <div class="form-group">
                    <h5>Conducteur Assuré :</h5>
                    @Html.Partial("../Conducteur/VConducteur", Model.ConducteurAssure)
                    @*@Html.LabelFor(model => model.ConducteurAssure, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConducteurAssure, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConducteurAssure, "", new { @class = "text-danger" })
            </div>*@
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VenantDeAssure, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VenantDeAssure, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VenantDeAssure, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AllantAAssure, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.AllantAAssure, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AllantAAssure, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ObservationsAssure, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.ObservationsAssure, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ObservationsAssure, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4"></div>
            @*Donnée Tiers*@
            <div class="col-md-4 jumbotron">
                <h2>Vehicule B</h2>
                <div class="form-group">
                    @Html.LabelFor(model => model.IdContratTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.IdContratTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IdContratTiers, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CodeAgenceTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.CodeAgenceTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CodeAgenceTiers, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AssuranceTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.AssuranceTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AssuranceTiers, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AgenceTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.AgenceTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AgenceTiers, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ValableDuTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ValableDuTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ValableDuTiers, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ValableAuTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ValableAuTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ValableAuTiers, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <h5>Conducteur Tiers :</h5>
                    @Html.Partial("../Conducteur/VConducteur", Model.ConducteurTiers)
                    @*@Html.LabelFor(model => model.ConducteurTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConducteurTiers, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConducteurTiers, "", new { @class = "text-danger" })
                        </div>*@
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.NomAssureTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.NomAssureTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomAssureTiers, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AdresseAssureTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.AdresseAssureTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdresseAssureTiers, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TelAssureTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.TelAssureTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelAssureTiers, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VenantDeTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.VenantDeTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VenantDeTiers, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AllantATiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.AllantATiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AllantATiers, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ObservationTiers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ObservationTiers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ObservationTiers, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>




        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.EstValide, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EstValide)
                        @Html.ValidationMessageFor(model => model.EstValide, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateValidation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateValidation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateValidation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#idContratAssure").change(function (e) {

                var idContrat = $("#idContratAssure").val();
                console.log(idContrat);
                $.ajax({
                    type: "GET",
                    url: "http://localhost:30326/api/Contrat?idcontrat=" + idContrat,
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (result) {
                        console.log(result);
                        $("#codeAgenceAssure").html = result.CodeAgence;

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(idContrat + ", " + jqXHR + ", " + textStatus + ", " + errorThrown);

                    }
                });
                return false;
            });




        });

    </script>
}
